<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.zzpigt.mybatis.mapper.AffairMapper" >
  <resultMap id="BaseResultMap" type="cn.zzpigt.bean.Affair" >
    <id column="affairId" property="affairid" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="affairTime" property="affairtime" jdbcType="TIMESTAMP" />
    <result column="affairState" property="affairstate" jdbcType="TINYINT" />
    <result column="affairModelId" property="affairmodelid" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.zzpigt.bean.Affair" extends="BaseResultMap" >
    <result column="affairContent" property="affaircontent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    affairId, userId, affairTime, affairState, affairModelId
  </sql>
  <sql id="Blob_Column_List" >
    affairContent
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cn.zzpigt.bean.AffairExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from affair
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.zzpigt.bean.AffairExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from affair
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from affair
    where affairId = #{affairid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from affair
    where affairId = #{affairid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.zzpigt.bean.AffairExample" >
    delete from affair
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.zzpigt.bean.Affair" >
  	<selectKey resultType="java.lang.Integer" keyProperty="affairid" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into affair (affairId, userId, affairTime, 
      affairState, affairModelId, affairContent
      )
    values (#{affairid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{affairtime,jdbcType=TIMESTAMP}, 
      #{affairstate,jdbcType=TINYINT}, #{affairmodelid,jdbcType=INTEGER}, #{affaircontent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.zzpigt.bean.Affair" >
    insert into affair
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="affairid != null" >
        affairId,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="affairtime != null" >
        affairTime,
      </if>
      <if test="affairstate != null" >
        affairState,
      </if>
      <if test="affairmodelid != null" >
        affairModelId,
      </if>
      <if test="affaircontent != null" >
        affairContent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="affairid != null" >
        #{affairid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="affairtime != null" >
        #{affairtime,jdbcType=TIMESTAMP},
      </if>
      <if test="affairstate != null" >
        #{affairstate,jdbcType=TINYINT},
      </if>
      <if test="affairmodelid != null" >
        #{affairmodelid,jdbcType=INTEGER},
      </if>
      <if test="affaircontent != null" >
        #{affaircontent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.zzpigt.bean.AffairExample" resultType="java.lang.Integer" >
    select count(*) from affair
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update affair
    <set >
      <if test="record.affairid != null" >
        affairId = #{record.affairid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.affairtime != null" >
        affairTime = #{record.affairtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.affairstate != null" >
        affairState = #{record.affairstate,jdbcType=TINYINT},
      </if>
      <if test="record.affairmodelid != null" >
        affairModelId = #{record.affairmodelid,jdbcType=INTEGER},
      </if>
      <if test="record.affaircontent != null" >
        affairContent = #{record.affaircontent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update affair
    set affairId = #{record.affairid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      affairTime = #{record.affairtime,jdbcType=TIMESTAMP},
      affairState = #{record.affairstate,jdbcType=TINYINT},
      affairModelId = #{record.affairmodelid,jdbcType=INTEGER},
      affairContent = #{record.affaircontent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update affair
    set affairId = #{record.affairid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      affairTime = #{record.affairtime,jdbcType=TIMESTAMP},
      affairState = #{record.affairstate,jdbcType=TINYINT},
      affairModelId = #{record.affairmodelid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.zzpigt.bean.Affair" >
    update affair
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="affairtime != null" >
        affairTime = #{affairtime,jdbcType=TIMESTAMP},
      </if>
      <if test="affairstate != null" >
        affairState = #{affairstate,jdbcType=TINYINT},
      </if>
      <if test="affairmodelid != null" >
        affairModelId = #{affairmodelid,jdbcType=INTEGER},
      </if>
      <if test="affaircontent != null" >
        affairContent = #{affaircontent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where affairId = #{affairid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.zzpigt.bean.Affair" >
    update affair
    set userId = #{userid,jdbcType=INTEGER},
      affairTime = #{affairtime,jdbcType=TIMESTAMP},
      affairState = #{affairstate,jdbcType=TINYINT},
      affairModelId = #{affairmodelid,jdbcType=INTEGER},
      affairContent = #{affaircontent,jdbcType=LONGVARCHAR}
    where affairId = #{affairid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.zzpigt.bean.Affair" >
    update affair
    set userId = #{userid,jdbcType=INTEGER},
      affairTime = #{affairtime,jdbcType=TIMESTAMP},
      affairState = #{affairstate,jdbcType=TINYINT},
      affairModelId = #{affairmodelid,jdbcType=INTEGER}
    where affairId = #{affairid,jdbcType=INTEGER}
  </update>
</mapper>